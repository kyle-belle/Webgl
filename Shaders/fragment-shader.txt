precision mediump float;
					   
   varying vec4 frag_colour;
   varying vec2 tex_coords0;
   varying vec3 normal0;
   varying vec3 world_pos;

   uniform sampler2D sampler;
    
    void main() {
    	//gl_FragColor = vec4(normal0, 1.0);

    	vec3 ambient_light = vec3(0.2, 0.2, 0.2);
    	vec3 sunlight = vec3(0.7, 0.6, 0.2);
    	vec3 sunlight_direction = normalize(vec3(1.0, 4.0, 0.0));

    	vec4 texel = texture2D(sampler, tex_coords0);

    	vec3 light = ambient_light + sunlight * max(dot(normal0, sunlight_direction),0.0);

      vec3 eye_pos = vec3(0, 0, -3);

      vec3 direction_to_eye = normalize(eye_pos - world_pos);
      vec3 reflect_direction = normalize(reflect(sunlight_direction, normal0));

      float specular_factor = dot(direction_to_eye, reflect_direction);
      specular_factor = pow(specular_factor, 9.0);

      vec4 specular_colour = texel * 1.0 * specular_factor;

    	gl_FragColor = (vec4(texel.rgb * light, texel.a) + specular_colour) * frag_colour;
    }